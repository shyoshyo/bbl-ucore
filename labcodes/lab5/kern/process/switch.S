#include <bits.h>

.text
.globl switch_to
switch_to:                      # switch_to(from, to)
    # save from's registers
    SW x1,  0*REGBYTES(a0)
    SW x2,  1*REGBYTES(a0)
    SW x3,  2*REGBYTES(a0)
    SW x4,  3*REGBYTES(a0)
    SW x5,  4*REGBYTES(a0)
    SW x6,  5*REGBYTES(a0)
    SW x7,  6*REGBYTES(a0)
    SW x8,  7*REGBYTES(a0)
    SW x9,  8*REGBYTES(a0)
    SW x10, 9*REGBYTES(a0)
    SW x11, 10*REGBYTES(a0)
    SW x12, 11*REGBYTES(a0)
    SW x13, 12*REGBYTES(a0)
    SW x14, 13*REGBYTES(a0)
    SW x15, 14*REGBYTES(a0)
    SW x16, 15*REGBYTES(a0)
    SW x17, 16*REGBYTES(a0)
    SW x18, 17*REGBYTES(a0)
    SW x19, 18*REGBYTES(a0)
    SW x20, 19*REGBYTES(a0)
    SW x21, 20*REGBYTES(a0)
    SW x22, 21*REGBYTES(a0)
    SW x23, 22*REGBYTES(a0)
    SW x24, 23*REGBYTES(a0)
    SW x25, 24*REGBYTES(a0)
    SW x26, 25*REGBYTES(a0)
    SW x27, 26*REGBYTES(a0)
    SW x28, 27*REGBYTES(a0)
    SW x29, 28*REGBYTES(a0)
    SW x30, 29*REGBYTES(a0)
    SW x31, 30*REGBYTES(a0)

    # x10 = a0 = from, x11 = a1 = to
    # restore to's registers
    # 
    LW x1,  0*REGBYTES(a1)
    LW x2,  1*REGBYTES(a1)
    LW x3,  2*REGBYTES(a1)
    LW x4,  3*REGBYTES(a1)
    LW x5,  4*REGBYTES(a1)
    LW x6,  5*REGBYTES(a1)
    LW x7,  6*REGBYTES(a1)
    LW x8,  7*REGBYTES(a1)
    LW x9,  8*REGBYTES(a1)
    LW x10, 9*REGBYTES(a1)
    LW x12, 11*REGBYTES(a1)
    LW x13, 12*REGBYTES(a1)
    LW x14, 13*REGBYTES(a1)
    LW x15, 14*REGBYTES(a1)
    LW x16, 15*REGBYTES(a1)
    LW x17, 16*REGBYTES(a1)
    LW x18, 17*REGBYTES(a1)
    LW x19, 18*REGBYTES(a1)
    LW x20, 19*REGBYTES(a1)
    LW x21, 20*REGBYTES(a1)
    LW x22, 21*REGBYTES(a1)
    LW x23, 22*REGBYTES(a1)
    LW x24, 23*REGBYTES(a1)
    LW x25, 24*REGBYTES(a1)
    LW x26, 25*REGBYTES(a1)
    LW x27, 26*REGBYTES(a1)
    LW x28, 27*REGBYTES(a1)
    LW x29, 28*REGBYTES(a1)
    LW x30, 29*REGBYTES(a1)
    LW x31, 30*REGBYTES(a1)
    LW x11, 10*REGBYTES(a1)

    ret
